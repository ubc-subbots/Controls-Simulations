function RTW_rtwnameSIDMap() {
	this.rtwnameHashMap = new Array();
	this.sidHashMap = new Array();
	this.rtwnameHashMap["<Root>"] = {sid: "controller2"};
	this.sidHashMap["controller2"] = {rtwname: "<Root>"};
	this.rtwnameHashMap["<S1>"] = {sid: "controller2:5"};
	this.sidHashMap["controller2:5"] = {rtwname: "<S1>"};
	this.rtwnameHashMap["<S2>"] = {sid: "controller2:10"};
	this.sidHashMap["controller2:10"] = {rtwname: "<S2>"};
	this.rtwnameHashMap["<Root>/eta_d"] = {sid: "controller2:1"};
	this.sidHashMap["controller2:1"] = {rtwname: "<Root>/eta_d"};
	this.rtwnameHashMap["<Root>/eta_d_dot"] = {sid: "controller2:2"};
	this.sidHashMap["controller2:2"] = {rtwname: "<Root>/eta_d_dot"};
	this.rtwnameHashMap["<Root>/eta_d_dot_dot"] = {sid: "controller2:3"};
	this.sidHashMap["controller2:3"] = {rtwname: "<Root>/eta_d_dot_dot"};
	this.rtwnameHashMap["<Root>/x"] = {sid: "controller2:4"};
	this.sidHashMap["controller2:4"] = {rtwname: "<Root>/x"};
	this.rtwnameHashMap["<Root>/C(nu)*nu + D(nu)*nu + g(eta)"] = {sid: "controller2:5"};
	this.sidHashMap["controller2:5"] = {rtwname: "<Root>/C(nu)*nu + D(nu)*nu + g(eta)"};
	this.rtwnameHashMap["<Root>/Demux2"] = {sid: "controller2:6"};
	this.sidHashMap["controller2:6"] = {rtwname: "<Root>/Demux2"};
	this.rtwnameHashMap["<Root>/Kd "] = {sid: "controller2:8"};
	this.sidHashMap["controller2:8"] = {rtwname: "<Root>/Kd "};
	this.rtwnameHashMap["<Root>/Kp "] = {sid: "controller2:9"};
	this.sidHashMap["controller2:9"] = {rtwname: "<Root>/Kp "};
	this.rtwnameHashMap["<Root>/M*(J^-1(eta)*a_n)"] = {sid: "controller2:10"};
	this.sidHashMap["controller2:10"] = {rtwname: "<Root>/M*(J^-1(eta)*a_n)"};
	this.rtwnameHashMap["<Root>/Model"] = {sid: "controller2:17"};
	this.sidHashMap["controller2:17"] = {rtwname: "<Root>/Model"};
	this.rtwnameHashMap["<Root>/Mux"] = {sid: "controller2:11"};
	this.sidHashMap["controller2:11"] = {rtwname: "<Root>/Mux"};
	this.rtwnameHashMap["<Root>/Sum"] = {sid: "controller2:12"};
	this.sidHashMap["controller2:12"] = {rtwname: "<Root>/Sum"};
	this.rtwnameHashMap["<Root>/Sum1"] = {sid: "controller2:13"};
	this.sidHashMap["controller2:13"] = {rtwname: "<Root>/Sum1"};
	this.rtwnameHashMap["<Root>/Sum2"] = {sid: "controller2:14"};
	this.sidHashMap["controller2:14"] = {rtwname: "<Root>/Sum2"};
	this.rtwnameHashMap["<Root>/Sum4"] = {sid: "controller2:15"};
	this.sidHashMap["controller2:15"] = {rtwname: "<Root>/Sum4"};
	this.rtwnameHashMap["<Root>/tau "] = {sid: "controller2:16"};
	this.sidHashMap["controller2:16"] = {rtwname: "<Root>/tau "};
	this.rtwnameHashMap["<S1>:1"] = {sid: "controller2:5:1"};
	this.sidHashMap["controller2:5:1"] = {rtwname: "<S1>:1"};
	this.rtwnameHashMap["<S2>:1"] = {sid: "controller2:10:1"};
	this.sidHashMap["controller2:10:1"] = {rtwname: "<S2>:1"};
	this.getSID = function(rtwname) { return this.rtwnameHashMap[rtwname];}
	this.getRtwname = function(sid) { return this.sidHashMap[sid];}
}
RTW_rtwnameSIDMap.instance = new RTW_rtwnameSIDMap();
